\RequirePackage{l3keys2e}
\ProvidesExplPackage{packages/Fonts}{2024-11-14}{1.0}{Fonts}
\RequirePackage{xparse}

\usepackage[math-style=ISO,bold-style=ISO]{unicode-math}

\let\codefamily\ttfamily
\DeclareTextFontCommand{\textcode}{\codefamily}

\setoperatorfont\text
\NewDocumentCommand{\BoldMath}{m}{\boldmath\(#1\)}

\keys_define:nn{font_config_keys}{
  FontFolder.tl_set:N = \l_font_config_folder_tl,
  FontFolder.initial:n = fonts/,
  FontFolder.value_required:n = true,
  NumberStyle.tl_set:N = \l_font_config_numbers_tl,
  NumberStyle.initial:n = Lining,
  NumberStyle.value_required:n = true,
  IosevkaScale.tl_set:N = \l_font_config_ioscale_tl,
  IosevkaScale.initial:n = MatchLowercase,
  IosevkaScale.value_required:n = true,

  CascadiaMono.code:n = {
    \setmonofont{CascadiaMono}[
      Path           = \tl_use:N\l_font_config_folder_tl cascadia-mono/,
      Extension      = .otf,
      UprightFont    = *-Regular,
      BoldFont       = *-Bold,
      ItalicFont     = *-Italic,
      BoldItalicFont = *-BoldItalic,
      Scale          = MatchLowercase,
    ]
  },
  CascadiaMono.value_forbidden:n = true,
  CascadiaMonoLight.code:n = {
    \setmonofont{CascadiaMono}[
      Path           = \tl_use:N\l_font_config_folder_tl cascadia-mono/,
      Extension      = .otf,
      UprightFont    = *-Light,
      BoldFont       = *-SemiBold,
      ItalicFont     = *-LightItalic,
      BoldItalicFont = *-SemiBoldItalic,
      Scale          = MatchLowercase,
    ]
  },
  CascadiaMonoLight.value_forbidden:n = true,
  Cochineal.code:n = {\usepackage{cochineal}},
  Cochineal.value_forbidden:n = true,
  CormorantGaramond.code:n = {
    \setmainfont[
      Extension      = .ttf,
      UprightFont    = *-Regular,
      ItalicFont     = *-Italic,
      BoldFont       = *-Bold,
      BoldItalicFont = *-BoldItalic,
      Ligatures      = TeX,
    ]{CormorantGaramond}
  },
  CormorantGaramond.value_forbidden:n = true,
  CormorantGaramondFam.code:n = {
    \newfontfamily\cormorant[
      Extension      = .ttf,
      UprightFont    = *-Regular,
      ItalicFont     = *-Italic,
      BoldFont       = *-Bold,
      BoldItalicFont = *-BoldItalic,
      Ligatures      = TeX,
    ]{CormorantGaramond}
  },
  CormorantGaramondFam.value_forbidden:n = true,
  EBGaramond.code:n = {
    \setmainfont{EBGaramond}[
      Extension      = .otf,
      UprightFont    = *-Regular,
      ItalicFont     = *-Italic,
      BoldFont       = *-Bold,
      BoldItalicFont = *-Bold Italic,
      StylisticSet   = 5,
    ]
  },
  EBGaramond.value_forbidden:n = true,
  EBGaramondFam.code:n = {
    \newfontfamily\ebgaramond[
      Extension      = .otf,
      UprightFont    = *-Regular,
      ItalicFont     = *-Italic,
      BoldFont       = *-Bold,
      BoldItalicFont = *-Bold Italic,
      Scale          = MatchLowercase,
      StylisticSet   = 5,
    ]{EBGaramond}
  },
  EBGaramondFam.value_forbidden:n = true,
  Emoji.code:n = {\RequirePackage{emoji}},
  Emoji.value_forbidden:n = true,
  GaramondMath.code:n = {
    \setmathfont{Garamond-Math.otf}[StylisticSet=3]
  },
  GaramondMath.value_forbidden:n = true,
  Erewhon.code:n = {
    \RequirePackage[math-style=ISO, bold-style=ISO]{fourier-otf}
    \tracinglostchars=0
    \setmathfont{Erewhon-Math-Bold.otf}[version=bold]
    \tracinglostchars=2
    \RenewDocumentCommand{\BoldMath}{m}{\tracinglostchars=0\boldmath\(#1\)\tracinglostchars=2}
  },
  Erewhon.value_forbidden:n = true,
  FiraSans.code:n = {
    \setsansfont{FiraSans}[
      Extension      = .otf,
      UprightFont    = *-Regular,
      BoldFont       = *-Bold,
      ItalicFont     = *-Italic,
      BoldItalicFont = *-BoldItalic,
      Ligatures      = TeX,
      Numbers        = \l_font_config_numbers_tl,
    ]
  },
  FiraSans.value_forbidden:n = true,
  FiraSansLight.code:n = {
    \setsansfont{FiraSans}[
      Extension      = .otf,
      UprightFont    = *-Light,
      BoldFont       = *-Book,
      ItalicFont     = *-LightItalic,
      BoldItalicFont = *-BookItalic,
      Ligatures      = TeX,
      Numbers        = \l_font_config_numbers_tl,
    ]
  },
  FiraSansLight.value_forbidden:n = true,
  FiraMath.code:n = {
    \setmathfont{FiraMath-Regular.otf}
  },
  FiraMath.value_forbidden:n = true,
  FiraMathLight.code:n = {
    \setmathfont{FiraMath-Light.otf}[
      Path=\tl_use:N\l_font_config_folder_tl fira-math/
    ]
    \setmathfont{FiraMath-Regular.otf}[version=bold]
    \g@addto@macro\bfseries{\boldmath}
  },
  FiraMathLight.value_forbidden:n = true,
  GFSNeoHellenic.code:n = {
    \usepackage[gfsneohellenic]{fontsetup}
  },
  GFSNeoHellenic.value_forbidden:n = true,
  IosevkaMono.code:n = {
    \setmonofont{IosevkaMono}[
      Path           = \tl_use:N\l_font_config_folder_tl iosevka-mono/,
      Extension      = .ttf,
      UprightFont    = *-Regular,
      BoldFont       = *-Bold,
      ItalicFont     = *-Italic,
      BoldItalicFont = *-BoldItalic,
      Scale          = \l_font_config_ioscale_tl,
      Numbers        = \l_font_config_numbers_tl,
    ]
  },
  IosevkaMono.value_forbidden:n = true,
  IosevkaMonoLight.code:n = {
    \setmonofont{IosevkaMono}[
      Path           = \tl_use:N\l_font_config_folder_tl iosevka-mono/,
      Extension      = .ttf,
      UprightFont    = *-Light,
      BoldFont       = *-Regular,
      ItalicFont     = *-LightItalic,
      BoldItalicFont = *-Italic,
      Scale          = \l_font_config_ioscale_tl,
      Numbers        = \l_font_config_numbers_tl,
    ]
  },
  IosevkaMonoLight.value_forbidden:n = true,
  IosevkaQuasi.code:n = {
    \newfontfamily\IosevkaQuasi{IosevkaQuasi}[
      Path           = \tl_use:N\l_font_config_folder_tl iosevka-quasi/,
      Extension      = .ttf,
      UprightFont    = *-Regular,
      BoldFont       = *-Bold,
      ItalicFont     = *-Italic,
      BoldItalicFont = *-BoldItalic,
      Scale          = \l_font_config_ioscale_tl,
      Numbers        = \l_font_config_numbers_tl,
    ]
    \let\codefamily\IosevkaQuasi
  },
  IosevkaQuasi.value_forbidden:n = true,
  IosevkaQuasiLight.code:n = {
    \newfontfamily\IosevkaQuasi{IosevkaQuasi}[
      Path           = \tl_use:N\l_font_config_folder_tl iosevka-quasi/,
      Extension      = .ttf,
      UprightFont    = *-Light,
      BoldFont       = *-Regular,
      ItalicFont     = *-LightItalic,
      BoldItalicFont = *-Italic,
      Scale          = \l_font_config_ioscale_tl,
      Numbers        = \l_font_config_numbers_tl,
    ]
    \let\codefamily\IosevkaQuasi
  },
  IosevkaQuasiLight.value_forbidden:n = true,
  PlayfairDisplay.code:n = {\usepackage{PlayfairDisplay}},
  PlayfairDisplay.value_forbidden:n = true,
  SFDefault.code:n = {\let\familydefault\sfdefault},
  SFDefault.value_forbidden:n = true,
  TwemojiMozilla.code:n = {
    \RequirePackage{emoji}
    \setemojifont{TwemojiMozilla}[
      Path      = \tl_use:N\l_font_config_folder_tl twemoji-mozilla/,
      Extension = .ttf,
      Scale     = MatchUppercase,
    ]
  },
  TwemojiMozilla.value_forbidden:n = true,
  Ysabeau.code:n = {
    \setsansfont{Ysabeau}[
      Extension      = .otf,
      UprightFont    = *-Regular,
      BoldFont       = *-Bold,
      ItalicFont     = *-Italic,
      BoldItalicFont = *-BoldItalic,
      Ligatures      = TeX,
      Numbers        = \l_font_config_numbers_tl,
    ]
  },
  Ysabeau.value_forbidden:n = true,
}

\regex_const:Nn\g_font_family_regex{\A(.*)\(\d+\)\Z}
\seq_const_from_clist:Nn\g_font_polytonic_seq{Ysabeau,EBGaramond}
\seq_new:N\l_font_parts_seq
\seq_new:N\l_font_family_parts_seq

\cs_new:Nn\font_current:{\tl_to_str:e{\the\font}}
% Store the current font family (without index) in #1.
\cs_new:Nn\font_current_family:N{
  % Expand the current font
  \tl_set:Ne\l_tmpa_tl{\font_current:}%
  \tl_log:N\l_tmpa_tl%
  % Split the font, which is of the form “\TU/family(index)/…”,
  % at every / and take the second part, i.e. “family(index)”
  \regex_split:nVN{/}\l_tmpa_tl\l_font_parts_seq%
  \seq_pop_left:NN\l_font_parts_seq\l_tmpb_tl%
  \seq_pop_left:NN\l_font_parts_seq\l_tmpb_tl%
  % Match “family(index)” to the regex “(.*)\(\d+\)” and get the first group
  \regex_extract_once:NVN\g_font_family_regex\l_tmpb_tl\l_font_family_parts_seq%
  \seq_pop_left:NN\l_font_family_parts_seq\l_tmpa_tl%
  \seq_pop_left:NN\l_font_family_parts_seq#1%
}
% #1: What to insert if the current font is known to support polytonic greek letters
% #2: What to insert otherwise
\NewDocumentCommand{\IfSupportsPolytonicGreekTF}{m m}{%
  \font_current_family:N\l_tmpa_tl%
  \bool_set_false:N\l_tmpa_bool%
  \seq_map_inline:Nn\g_font_polytonic_seq{\str_if_eq:VnT\l_tmpa_tl{##1}{\bool_set_true:N\l_tmpa_bool}}%
  \bool_if:NTF\l_tmpa_bool{#1}{#2}%
}

\ProcessKeysOptions{font_config_keys}
\AtBeginDocument{\let\UrlFont\codefamily}
